// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	context "context"
	managers "mutants/app/mutants/managers"

	mock "github.com/stretchr/testify/mock"
)

// MutantManager is an autogenerated mock type for the MutantManager type
type MutantManager struct {
	mock.Mock
}

// IsMutant provides a mock function with given fields: ctx, dna
func (_m *MutantManager) IsMutant(ctx context.Context, dna [][]string) (bool, error) {
	ret := _m.Called(ctx, dna)

	var r0 bool
	if rf, ok := ret.Get(0).(func(context.Context, [][]string) bool); ok {
		r0 = rf(ctx, dna)
	} else {
		r0 = ret.Get(0).(bool)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, [][]string) error); ok {
		r1 = rf(ctx, dna)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// RetrieveStats provides a mock function with given fields: ctx
func (_m *MutantManager) RetrieveStats(ctx context.Context) (managers.StatsSummary, error) {
	ret := _m.Called(ctx)

	var r0 managers.StatsSummary
	if rf, ok := ret.Get(0).(func(context.Context) managers.StatsSummary); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Get(0).(managers.StatsSummary)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context) error); ok {
		r1 = rf(ctx)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
